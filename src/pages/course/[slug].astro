---
import courses from "../../data/courses.ts";
import Header from "../../components/Header.astro";
import VideoPlayer from "../../components/VideoPlayer.jsx";
import Like from "../../components/Like.jsx";
import React, { useState, useEffect } from "react";
import { currencyRates } from "../../data/currencyRates";

// Inline Price component (defined in frontmatter)
function Price({ price }) {
  const [currency, setCurrency] = useState("USD");

  useEffect(() => {
    const savedCurrency = localStorage.getItem("currency") || "USD";
    setCurrency(savedCurrency);

    const handleCurrencyChanged = () => {
      const newCurrency = localStorage.getItem("currency") || "USD";
      setCurrency(newCurrency);
    };

    window.addEventListener("currencyChanged", handleCurrencyChanged);
    return () => {
      window.removeEventListener("currencyChanged", handleCurrencyChanged);
    };
  }, []);

  const convertPrice = (price) => {
    const rate = currencyRates[currency] || 1;
    return (price * rate).toFixed(2);
  };

  // Note: Do NOT add client:load here because this is an inline component.
  return <span>{currency} {convertPrice(price)}</span>;
}

const { slug } = Astro.params;

export async function getStaticPaths() {
  return {
    paths: courses.map((course) => ({
      params: { slug: course.id },
    })),
    fallback: false,
  };
}

const course = courses.find((course) => course.id == slug);
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{course.title}</title>
  </head>
  <body>
    <Header />
    <main class="max-w-5xl mx-auto p-4">
      <h1 class="text-4xl font-bold mb-4">{course.title}</h1>
      <p class="text-gray-500 mb-2">Created on: {course.date_created}</p>
      <p class="text-xl text-orange-500 font-bold mb-4">
        <Price price={course.price} />
      </p>
      <img
        src={course.image_url}
        alt={course.title}
        class="w-full h-auto mb-4 rounded-lg object-cover"
      />
      <div class="mb-4">
        <VideoPlayer course={course} client:load />
      </div>
      <p class="mb-4">{course.description}</p>
      <div class="mb-4">
        <span class="font-bold">Tags: </span>
        {course.tags.map((tag) => (
          <span
            key={tag}
            class="inline-block bg-gray-200 text-gray-700 px-2 py-1 rounded mr-2"
          >
            {tag}
          </span>
        ))}
      </div>
      <div>
        <Like course={course} client:load />
      </div>
    </main>
  </body>
</html>
